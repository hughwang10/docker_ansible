---
# Copyright (C) 2015 by
# Ericsson AB
# S-164 83 Stockholm
# Sweden
# Tel: +46 10 719 00 00
#
# The program may be used and/or copied only with the written permission
# from Ericsson AB, or in accordance with the terms and
# conditions stipulated in the agreement/contract under which the program
# has been supplied.
#
# All rights reserved.
# tasks file for roles/vm2_upgrade_vbox

- name: "Find the running stack for hagroup {{ hagroup }}"
  shell: ls {{ output_folder_remote_old }}/heat/{{ os_msptemplate }}_{{ hagroup }}
  when: ( upgrade_method | default('bulk') == 'bulk') and ( hagroup != 'all_groups' )

- debug: msg = "Build template file for Upgrade/1"
  when: ( hagroup != 'all_groups' )

- name: "mkdir upgrade/1"
  action: file path={{ output_folder_remote }}/upgrade/1/temp state=directory
  when: ( upgrade_method | default('bulk') == 'bulk')
  ignore_errors: yes

- name: "clean temp dir"
  shell: rm {{ output_folder_remote }}/upgrade/1/temp/*
  when: ( upgrade_method | default('bulk') == 'bulk')
  ignore_errors: yes

- name: "mkdir upgrade/1 for {{ hagroup }}"
  action: file path={{ output_folder_remote }}/upgrade/1/temp/{{ hagroup }} state=directory
  when: ( upgrade_method | default('bulk') == 'bulk') and ( hagroup != 'all_groups' )
  ignore_errors: yes

- name: "clean temp dir"
  shell: rm {{ output_folder_remote }}/upgrade/1/temp/{{ hagroup }}/
  when: ( upgrade_method | default('bulk') == 'bulk') and ( hagroup != 'all_groups' )
  ignore_errors: yes

- name: "Get all volumes in the running stack, for hagroup {{ hagroup }}"
  shell: sed -rn '/.*_volume_[a-zA-Z0-9_.-]*:/,/^$/p' > '{{ output_folder_remote }}/upgrade/1/temp/{{ hagroup }}/{{ item }}-vols.yaml' {{ output_folder_remote_old }}/heat/temp/{{ hagroup }}/{{ item }}.yaml
  when: ( upgrade_method | default('bulk') == 'bulk') and ( hagroup != 'all_groups' )
  ignore_errors: yes
  with_items: vm_base_names

- name: "Remove vol files with size 0, for hagroup {{ hagroup}}"
  shell: rm -f `find {{ output_folder_remote }}/upgrade/1/temp/{{ hagroup }}/*vols.yaml -size 0`
  when: ( upgrade_method | default('bulk') == 'bulk') and ( hagroup != 'all_groups' )

- name: "copy 0.yaml from {{ output_folder_remote_old }}/heat/temp/{{ hagroup }} to upgrade/1/temp/{{ hagroup }}"
  shell: cp {{ output_folder_remote_old }}/heat/temp/{{ hagroup }}/0.yaml {{ output_folder_remote }}/upgrade/1/temp/{{ hagroup }}
  when: ( upgrade_method | default('bulk') == 'bulk') and ( hagroup != 'all_groups' )

- name: "Assemble template file for upgrade/1, {{ hagroup }}"
  action: assemble dest="{{ output_folder_remote }}/upgrade/1/{{ os_msptemplate }}_{{ hagroup }}.orig" src="{{ output_folder_remote}}/upgrade/1/temp/{{ hagroup }}"
  when: ( upgrade_method | default('bulk') == 'bulk') and ( hagroup != 'all_groups' )

- name: "Transfer the depends.py script"
  copy: src=depends.py dest={{ output_folder_remote }}/upgrade/1/ mode=0755
  when: ( upgrade_method | default('bulk') == 'bulk')

- name: "Add dependency per resource_creation_channels"
  action: shell python {{ output_folder_remote }}/upgrade/1/depends.py -f {{ output_folder_remote }}/upgrade/1/{{ os_msptemplate }}_{{ hagroup }}.orig -o {{ output_folder_remote }}/upgrade/1/{{ os_msptemplate }}_{{ hagroup }}.depends -t {{ resource_creation_channels | default('0') }}
  when: (action == "deploy_openstack") and ( upgrade_method | default('bulk') == 'bulk') and ( resource_creation_channels | default('0') != '0') and ( hagroup != "all_groups" )

- name: "Use {{ os_msptemplate }}_{{ hagroup }}.depends as {{ os_msptemplate }}_{{ hagroup }}"
  shell: mv {{ output_folder_remote }}/upgrade/1/{{ os_msptemplate }}_{{ hagroup }}.depends {{ output_folder_remote }}/upgrade/1/{{ os_msptemplate }}_{{ hagroup }}
  when: (action == "deploy_openstack") and ( upgrade_method | default('bulk') == 'bulk') and ( resource_creation_channels | default('0') != '0') and ( hagroup != "all_groups" )

- name: "Use {{ os_msptemplate }}_{{ hagroup }}.orig as {{ os_msptemplate }}_{{ hagroup }}"
  shell: mv {{ output_folder_remote }}/upgrade/1/{{ os_msptemplate }}_{{ hagroup }}.orig {{ output_folder_remote }}/upgrade/1/{{ os_msptemplate }}_{{ hagroup }}
  when: (action == "deploy_openstack") and ( upgrade_method | default('bulk') == 'bulk') and ( resource_creation_channels | default('0') == '0') and ( hagroup != "all_groups" )
 
- debug: msg="template file for upgrade/1 is ready now"
  when: (( upgrade_method | default('bulk') ) == 'bulk') and ( hagroup != "all_groups" )

- name: "sleep a while"
  shell: sleep 60
  when: (( upgrade_method | default('bulk') ) == 'bulk') and ( hagroup != "all_groups" ) and ( cee_dryrun | default('False') == 'False')

- name: "using python-heatclient heat stack-update - Bulk Upgrade, hagroup {{ hagroup }}"
  when: (action == "deploy_openstack") and (upgrade_method | default('bulk') == 'bulk') and ( hagroup != "all_groups" ) and ( use_heat_env_file | default('False') == 'False') and ( cee_dryrun | default('False') == 'False')
  action: shell heat stack-update -f {{output_folder_remote }}/upgrade/1/{{ os_msptemplate }}_{{ hagroup }} {{ os_stackname }}_{{ hagroup }}
  environment:
      OS_PASSWORD: "{{ os_password }}"
      OS_AUTH_URL: "{{ os_authurl }}"
      OS_USERNAME: "{{ os_username }}"
      OS_TENANT_NAME: "{{ os_tenant }}"

- name: "using python-heatclient heat stack-update - Bulk Upgrade, hagroup {{ hagroup }}"
  when: (action == "deploy_openstack") and (upgrade_method | default('bulk') == 'bulk') and ( hagroup != "all_groups" ) and ( use_heat_env_file | default('False') == 'True') and ( cee_dryrun | default('False') == 'False')
  action: shell heat stack-update -f {{output_folder_remote }}/upgrade/1/{{ os_msptemplate }}_{{ hagroup }} -e {{ output_folder_remote_old }}/heat/{{ os_stackname }}_heat_env_file {{ os_stackname }}_{{ hagroup }}
  environment:
      OS_PASSWORD: "{{ os_password }}"
      OS_AUTH_URL: "{{ os_authurl }}"
      OS_USERNAME: "{{ os_username }}"
      OS_TENANT_NAME: "{{ os_tenant }}"


- name: "Wait till the stack update completed - Bulk Deployment"
  when: (action == "deploy_openstack") and ( upgrade_method | default('bulk') == 'bulk') and ( hagroup != "all_groups" ) and ( cee_dryrun | default('False') == 'False')
  action: shell heat stack-list |grep -w {{ os_stackname }}_{{ hagroup }}
  register: result
  until: result.stdout.find("COMPLETE") !=-1
  retries: 10000
  delay:  5
  environment:
      OS_PASSWORD: "{{ os_password }}"
      OS_AUTH_URL: "{{ os_authurl }}"
      OS_USERNAME: "{{ os_username }}"
      OS_TENANT_NAME: "{{ os_tenant }}"

- debug: msg="Upgrade/1 is done"
  when: (( upgrade_method | default('bulk') ) == 'bulk') and ( hagroup != "all_groups" )

- name: "sleep a while"
  shell: sleep 60
  when: (( upgrade_method | default('bulk') ) == 'bulk') and ( hagroup != "all_groups" ) and ( cee_dryrun | default('False') == 'False')

- debug: msg="Build template file for upgrade/2"
  when: ( hagroup != "all_groups" )

- name: "mkdir upgrade/2"
  action: file path={{ output_folder_remote }}/upgrade/2/temp state=directory
  ignore_errors: yes

- name: "clean the dir"
  shell: rm {{ output_folder_remote }}/upgrade/2/temp/*
  ignore_errors: yes

- name: "mkdir upgrade/2, for hagroup {{ hagroup }}"
  action: file path={{ output_folder_remote }}/upgrade/2/temp/{{ hagroup }} state=directory
  when: ( hagroup != "all_groups" )
  ignore_errors: yes

- name: "clean the dir, for hagroup {{ hagroup }}"
  shell: rm {{ output_folder_remote }}/upgrade/2/temp/{{ hagroup }}/*
  when: ( hagroup != "all_groups" )
  ignore_errors: yes

- name: "Copy template file from upgrade/1 to upgrade/2, for hagroup {{ hagroup }}"
  shell: cp -R {{ output_folder_remote }}/upgrade/1/temp/{{ hagroup }}/* {{ output_folder_remote }}/upgrade/2/temp/{{ hagroup }}/
  when: ( upgrade_method | default('bulk')) == 'bulk' and ( hagroup != "all_groups" )

- name: "Copy template file from heat to upgrade/2, for hagroup {{ hagroup }}"
  shell: cp -R {{ output_folder_remote }}/heat/temp/{{ hagroup }}/* {{ output_folder_remote }}/upgrade/2/temp/{{ hagroup }}/
  when: ( upgrade_method | default('bulk')) == 'bulk' and ( hagroup != "all_groups" )

- name: "Assemble template file for upgrade/1, {{ hagroup }}"
  action: assemble dest="{{ output_folder_remote }}/upgrade/2/{{ os_msptemplate }}_{{ hagroup }}.orig" src="{{ output_folder_remote}}/upgrade/2/temp/{{ hagroup }}"
  when: ( upgrade_method | default('bulk') == 'bulk') and ( hagroup != "all_groups" )

- name: "Transfer the depends.py script"
  copy: src=depends.py dest={{ output_folder_remote }}/upgrade/2/ mode=0755
  when: ( upgrade_method | default('bulk') == 'bulk')

- name: "Add dependency per resource_creation_channels"
  action: shell python {{ output_folder_remote }}/upgrade/2/depends.py -f {{ output_folder_remote }}/upgrade/2/{{ os_msptemplate }}_{{ hagroup }}.orig -o {{ output_folder_remote }}/upgrade/2/{{ os_msptemplate }}_{{ hagroup }}.depends -t {{ resource_creation_channels | default('0') }}
  when: (action == "deploy_openstack") and ( upgrade_method | default('bulk') == 'bulk') and ( resource_creation_channels | default('0') != '0') and ( hagroup != "all_groups" )

- name: "Use {{ os_msptemplate }}_{{ hagroup }}.depends as {{ os_msptemplate }}_{{ hagroup }}"
  shell: mv {{ output_folder_remote }}/upgrade/2/{{ os_msptemplate }}_{{ hagroup }}.depends {{ output_folder_remote }}/upgrade/2/{{ os_msptemplate }}_{{ hagroup }}
  when: (action == "deploy_openstack") and ( upgrade_method | default('bulk') == 'bulk') and ( resource_creation_channels | default('0') != '0') and ( hagroup != "all_groups" )

- name: "Use {{ os_msptemplate }}_{{ hagroup }}.orig as {{ os_msptemplate }}_{{ hagroup }}"
  shell: mv {{ output_folder_remote }}/upgrade/2/{{ os_msptemplate }}_{{ hagroup }}.orig {{ output_folder_remote }}/upgrade/2/{{ os_msptemplate }}_{{ hagroup }}
  when: (action == "deploy_openstack") and ( upgrade_method | default('bulk') == 'bulk') and ( resource_creation_channels | default('0') == '0') and ( hagroup != "all_groups" )

- debug: msg="template file for upgrade/2 is ready now"
  when: (( upgrade_method | default('bulk') ) == 'bulk') and ( hagroup != "all_groups" )

- name: "sleep a while"
  shell: sleep 60
  when: (( upgrade_method | default('bulk') ) == 'bulk') and ( hagroup != "all_groups" ) and ( cee_dryrun | default('False') == 'False')

- name: "using python-heatclient heat stack-update - Bulk Upgrade, hagroup {{ hagroup }}"
  when: (action == "deploy_openstack") and (upgrade_method | default('bulk') == 'bulk') and ( hagroup != "all_groups" ) and ( use_heat_env_file | default('False') == 'False') and ( cee_dryrun | default('False') == 'False')
  action: shell heat stack-update -f {{output_folder_remote }}/upgrade/2/{{ os_msptemplate }}_{{ hagroup }} {{ os_stackname }}_{{ hagroup }}
  environment:
      OS_PASSWORD: "{{ os_password }}"
      OS_AUTH_URL: "{{ os_authurl }}"
      OS_USERNAME: "{{ os_username }}"
      OS_TENANT_NAME: "{{ os_tenant }}"

- name: "using python-heatclient heat stack-update - Bulk Upgrade, hagroup {{ hagroup }}"
  when: (action == "deploy_openstack") and (upgrade_method | default('bulk') == 'bulk') and ( hagroup != "all_groups" ) and ( use_heat_env_file | default('False') == 'True') and ( cee_dryrun | default('False') == 'False')
  action: shell heat stack-update -f {{output_folder_remote }}/upgrade/2/{{ os_msptemplate }}_{{ hagroup }} -e {{ output_folder_remote }}/heat/{{os_stackname }}_heat_env_file {{ os_stackname }}_{{ hagroup }}
  environment:
      OS_PASSWORD: "{{ os_password }}"
      OS_AUTH_URL: "{{ os_authurl }}"
      OS_USERNAME: "{{ os_username }}"
      OS_TENANT_NAME: "{{ os_tenant }}"

- name: "Wait till the stack update completed - Bulk Deployment"
  when: (action == "deploy_openstack") and ( upgrade_method | default('bulk') == 'bulk') and ( hagroup != "all_groups" ) and ( cee_dryrun | default('False') == 'False')
  action: shell heat stack-list |grep -w {{ os_stackname }}_{{ hagroup }}
  register: result
  until: (result.stdout.find("COMPLETE") !=-1) or (result.stdout.find("FAIL") !=-1)
  retries: 10000
  delay:  5
  environment:
      OS_PASSWORD: "{{ os_password }}"
      OS_AUTH_URL: "{{ os_authurl }}"
      OS_USERNAME: "{{ os_username }}"
      OS_TENANT_NAME: "{{ os_tenant }}"
  
- name: "Transfer the upgrade_all_groups script for all_groups case"
  copy: src=upgrade_all_groups.sh dest={{ output_folder_remote }}/upgrade/ mode=0755
  when: ( upgrade_method | default('bulk') == 'bulk') and ( hagroup == "all_groups" )
  
- name: "Upgrade all hagroups via the upgrade_all_groups script, refer to log file {{ output_folder_remote }}/upgrade/upgrade_all_groups.log"
  command: "{{ output_folder_remote }}/upgrade/upgrade_all_groups.sh {{ output_folder_remote_old }}/heat {{ output_folder_remote }}/upgrade {{ resource_creation_channels | default('0') }} {{ os_msptemplate }} {{ os_stackname }} {{ use_heat_env_file | default('False') }} {{ cee_dryrun | default('False') }}" 
  when: (action == "deploy_openstack") and ( upgrade_method | default('bulk') == 'bulk') and ( hagroup == "all_groups" )
  environment:
      OS_PASSWORD: "{{ os_password }}"
      OS_AUTH_URL: "{{ os_authurl }}"
      OS_USERNAME: "{{ os_username }}"
      OS_TENANT_NAME: "{{ os_tenant }}"

- debug: msg="Upgrade/2 is done"
  when: (( upgrade_method | default('bulk') ) == 'bulk') and ( hagroup != "all_groups" )

- debug: msg="Upgrade all hagroups is done"
  when: (( upgrade_method | default('bulk') ) == 'bulk') and ( hagroup == "all_groups" )
