---
# Copyright (C) 2015 by
# Ericsson AB
# S-164 83 Stockholm
# Sweden
# Tel: +46 10 719 00 00
#
# The program may be used and/or copied only with the written permission
# from Ericsson AB, or in accordance with the terms and
# conditions stipulated in the agreement/contract under which the program
# has been supplied.
#
# All rights reserved.
# tasks file for roles/vm_deploy_vbox
# tasks file for slb_deploy_vbox
#
# Deploy a SLB using latest vmdk and seed_dhcp.iso
#
# -name: "Create SLB with vm-name, slb_vmdk, seed_slb.iso"

- name: Creates  VM {{ vm_name_deploy }} VM disk directory
  file: path={{ output_folder_remote | realpath }}/vm state=directory

- name: Creates  VM {{ vm_name_deploy }} VM disk directory
  local_action: file path={{ output_folder | realpath }}/vm state=directory

- name: "Find the latest vmdk"
  local_action: shell ls -t {{ vm_vmdk }} | head -1
  register: cmd1_result 

- name: "Find the latest vmdk, normalize the path"
  local_action: shell readlink -m {{ cmd1_result.stdout }}
  register: cmd_result

- name: "Close disk"
  action: command vboxmanage closemedium disk "{{ output_folder_remote | realpath }}/vm/{{ vm_name_deploy }}.vdi --delete"
  ignore_errors: yes
  when: force_remove | default(False) == True or force_remove | default(False) == "True"

- name: removes existing vmdk file
  file: path={{ output_folder_remote | realpath }}/vm/{{ vm_name_deploy }}.vdi state=absent

- name: "Close disk"
  action: command vboxmanage closemedium disk "{{ output_folder_remote | realpath }}/vm/{{ vm_name_deploy }}.vmdk --delete"
  ignore_errors: yes
  when: force_remove | default(False) == True or force_remove | default(False) == "True"

- name: removes existing vdi file
  file: path={{ output_folder_remote | realpath }}/vm/{{ vm_name_deploy }}.vmdk state=absent

- name: "Copy {{ cmd_result.stdout }} to deploy host"
  action: copy src={{ cmd_result.stdout }} dest={{ output_folder_remote | realpath }}/vm/{{ vm_name_deploy }}.vmdk

- name: "Sleep a litle bit"
  local_action: shell sleep 0.2

- name: "Close disk"
  action: command vboxmanage closemedium disk "{{ output_folder_remote | realpath }}/vm/{{ vm_name_deploy }}.vmdk"
  ignore_errors: yes

- name: "Sleep a litle bit"
  local_action: shell sleep 0.2

- debug: msg="{{ cmd_result.stdout }}"

- name: "Clone disk to .vdi"
  action: command vboxmanage clonehd "{{ output_folder_remote | realpath }}/vm/{{ vm_name_deploy }}.vmdk" "{{ output_folder_remote | realpath }}/vm/{{ vm_name_deploy }}.vdi" --format vdi

- name: "Sleep a litle bit"
  local_action: shell sleep 0.2

- name: "Resize disk"
  action: command vboxmanage modifyhd "{{ output_folder_remote | realpath }}/vm/{{ vm_name_deploy }}.vdi" --resize "{{ rootdisk_size | default('1')  | int * 1024}}"

- name: "Close disk"
  action: command vboxmanage closemedium disk "{{ output_folder_remote | realpath }}/vm/{{ vm_name_deploy }}.vmdk --delete"
  ignore_errors: yes
  when: force_remove | default(False) == True or force_remove | default(False) == "True"

- name: removes vmdk file
  file: path={{ output_folder_remote | realpath }}/vm/{{ vm_name_deploy }}.vmdk state=absent

- name: "Vbox Createvm"
  action: shell sleep 0.1 ; vboxmanage createvm --name {{ vm_name_deploy }} --ostype "OpenSUSE_64" --groups "/{{ clusterid }}" --register ; sleep 0.2
  register: uuid

#- debug: msg="{{ uuid.stdout }}"
#

- add_host: name={{ vm_name_deploy }}.vbox groups=vbox uuid="{{ uuid.stdout_lines[1] | regex_replace('UUID'':'' ([0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12})', '\\1') }}" clusterid={{ clusterid }} servername={{ vm_name_deploy }}

- name: "Vbox storagectl add"
  action: command vboxmanage storagectl {{ hostvars[ vm_name_host_index ]['uuid'] }} --name "SATA Controller" --add sata --controller IntelAHCI --portcount 5

- name: "Sleep a litle bit"
  local_action: shell sleep 0.1

- name: "Vbox storageattach vdi"
  action: command vboxmanage storageattach {{ hostvars[ vm_name_host_index ]['uuid'] }} --storagectl "SATA Controller" --port 0 --device 0 --type hdd --medium {{ output_folder_remote | realpath }}/vm/{{ vm_name_deploy }}.vdi  --setuuid ""
# --nonrotational on --discard on

- name: "Vbox storagectl ide"
  action: command vboxmanage storagectl {{ hostvars[ vm_name_host_index ]['uuid'] }} --name "IDE Controller" --add ide --portcount 2

- name: "Sleep a litle bit"
  local_action: shell sleep 0.1

- name: "Vbox storageattach dvd"
  action: command vboxmanage storageattach {{ hostvars[ vm_name_host_index ]['uuid'] }} --storagectl "IDE Controller" --port 0 --device 0 --type dvddrive --medium {{ output_folder_remote }}/{{ vm_type }}/seed-{{ deploy_address }}_{{ vm_name_deploy }}.iso
  when: vm_type != "mn"

- name: "Vbox storageattach dvd on MN"
  action: command vboxmanage storageattach {{ hostvars[ vm_name_host_index ]['uuid'] }} --storagectl "IDE Controller" --port 0 --device 0 --type dvddrive --medium {{ output_folder_remote }}/{{ vm_type }}/seed-{{ mn_config_type | default(deploy_address_mn) }}_{{ vm_name_deploy }}.iso
  when: vm_type == "mn"

- name: "Vbox storageattach vbox guestadditions"
  action: command vboxmanage storageattach {{ hostvars[ vm_name_host_index ]['uuid'] }} --storagectl "IDE Controller" --port 0 --device 1 --type dvddrive --medium /usr/share/virtualbox/VBoxGuestAdditions.iso
  ignore_errors: yes
  when: vboxguestadd | default(False) |bool == True

- name: "Vbox ioapic on"
  action: command vboxmanage modifyvm {{ hostvars[ vm_name_host_index ]['uuid'] }} --ioapic on

- name: "Vbox video ram"
  action: command vboxmanage modifyvm {{ hostvars[ vm_name_host_index ]['uuid'] }} --vram 64

- name: "Vbox boot order conf"
  action: command vboxmanage modifyvm {{ hostvars[ vm_name_host_index ]['uuid'] }} --boot1 disk --boot2 none --boot3 none --boot4 none

- name: "Vbox CPU and Memory"
  action: command vboxmanage modifyvm {{ hostvars[ vm_name_host_index ]['uuid'] }} --memory {{ resource_mem_vm }} --cpus {{ resource_cpu_vm }}

- name: "Vbox NIC1"
  action: command vboxmanage modifyvm {{ hostvars[ vm_name_host_index ]['uuid'] }} --nic1 {{ vbox_nic_oam }} --{{ vbox_nic_oam_prefix }}{{ vbox_nic_oam_adaptername }}1 {{ vbox_net_oam }}
  when: (nic1_enable | default(0) | bool == 1 and vbox_nic_oam != "natnetwork") and vm_type in all_vm_types

- name: "Vbox NIC1"
  action: command vboxmanage modifyvm {{ hostvars[ vm_name_host_index ]['uuid'] }} --nic1 nat --cableconnected1 on
#--nictype1 {{ vbox_net_oam }}
  when: (nic1_enable | default(0) | bool == 1) and  vm_type not in all_vm_types

- name: "Vbox NIC1"
  action: command vboxmanage modifyvm {{ hostvars[ vm_name_host_index ]['uuid'] }} --nic1 {{ vbox_nic_oam }} --{{ vbox_nic_oam_prefix }}{{ vbox_nic_oam_adaptername }}1nat {{ vbox_net_oam }}
  when: (nic1_enable | default(0) | bool == 1 and vbox_nic_oam == "natnetwork") and vm_type in all_vm_types

- name: "Vbox NIC2"
  action: command vboxmanage modifyvm {{ hostvars[ vm_name_host_index ]['uuid'] }} --nic2 {{ vbox_nic_internal }} --{{ vbox_nic_internal_prefix }}{{ vbox_nic_internal_adaptername }}2 {{ vbox_net_internal }}
  when: nic2_enable | default(0) | bool == 1

- name: "Vbox NIC3"
  action: command vboxmanage modifyvm {{ hostvars[ vm_name_host_index ]['uuid'] }} --nic3 {{ vbox_nic_access }} --{{ vbox_nic_access_prefix }}{{ vbox_nic_access_adaptername }}3 {{ vbox_net_access }}
  when: nic3_enable | default(0) | bool == 1 and (vm_type != "da" or (vm_type == "da" and controlplanesig_network is not defined)) 

- name: "Vbox NIC3 ControlPlaneSig"
  action: command vboxmanage modifyvm {{ hostvars[ vm_name_host_index ]['uuid'] }} --nic3 {{ vbox_nic_controlplanesig }} --{{ vbox_nic_controlplanesig_prefix }}{{ vbox_nic_controlplanesig_adaptername }}3 {{ vbox_net_controlplanesig }}
  when: nic3_enable | default(0) | bool == 1 and (vm_type in ["da", "cim" ] and controlplanesig_network is defined) 

- name: "Vbox NIC4"
  action: command vboxmanage modifyvm {{ hostvars[ vm_name_host_index ]['uuid'] }} --nic4 {{ vbox_nic_internet }} --{{ vbox_nic_internet_prefix }}{{ vbox_nic_internet_adaptername }}4 {{ vbox_net_internet }}
  when: (nic4_enable | default(0) | bool == 1 and vbox_nic_internet != "natnetwork")

- name: "Vbox NIC4"
  action: command vboxmanage modifyvm {{ hostvars[ vm_name_host_index ]['uuid'] }} --nic4 {{ vbox_nic_internet }} --{{ vbox_nic_internet_prefix }}{{ vbox_nic_internet_adaptername }}4 {{ vbox_net_internet }}
  when: (nic4_enable | default(0) | bool == 1 and vbox_nic_internet == "natnetwork")

- name: "Vbox NIC5"
  action: command vboxmanage modifyvm {{ hostvars[ vm_name_host_index ]['uuid'] }} --nic5 {{ vbox_nic_accessingress }} --{{ vbox_nic_accessingress_prefix }}{{ vbox_nic_accessingress_adaptername }}5 {{ vbox_net_accessingress }}
  when: nic5_enable | default(0) | bool == 1 and vm_type != "ts"

- name: "Vbox NIC5 ControlPlaneSig"
  action: command vboxmanage modifyvm {{ hostvars[ vm_name_host_index ]['uuid'] }} --nic5 {{ vbox_nic_controlplanesig }} --{{ vbox_nic_controlplanesig_prefix }}{{ vbox_nic_controlplanesig_adaptername }}5 {{ vbox_net_controlplanesig }}
  when: vm_type == "ts" and (controlplanesig_network is defined)


- name: "Vbox NIC6"
  action: command vboxmanage modifyvm {{ hostvars[ vm_name_host_index ]['uuid'] }} --nic6 {{ vbox_nic_internetingress }} --{{ vbox_nic_internetingress_prefix }}{{ vbox_nic_internetingress_adaptername }}6 {{ vbox_net_internetingress }}
  when: nic6_enable | default(0) | bool == 1


#- name: "Vbox startvm"
#  action: command vboxmanage startvm {{ hostvars[ vm_name_host_index ]['uuid'] }}


