---
# Copyright (C) 2015 by
# Ericsson AB
# S-164 83 Stockholm
# Sweden
# Tel: +46 10 719 00 00
#
# The program may be used and/or copied only with the written permission
# from Ericsson AB, or in accordance with the terms and
# conditions stipulated in the agreement/contract under which the program
# has been supplied.
#
# All rights reserved.
# tasks file for roles/unpack_images
- name: Create download folder {{ path_to_latest }} directory
  local_action: file path={{ path_to_latest }}/archive state=directory

- name: "Find the latest archive file"
  local_action: shell ls -t {{ path_to_latest }}/*.{{ container_format }} | head -1
  ignore_errors: yes
  register: cmd1_result 

- name: "Find the latest zip, normalize the path"
  local_action: shell readlink -m {{ cmd1_result.stdout }}
  ignore_errors: yes
  register: cmd_result

- name: "Unpack zip"
  local_action: command unzip -o {{ cmd_result.stdout }} -d {{ path_to_latest }}/archive
  ignore_errors: yes
  when: container_format == "zip"

- name: "Unpack zip to tar"
  local_action: command unzip -o {{ cmd_result.stdout }} -d {{ path_to_latest }}
  ignore_errors: yes
  when: container_format == "tar"

- name: "Find the latest tar"
  local_action: shell ls -t {{ path_to_latest }}/*.tar | head -1
  ignore_errors: yes
  register: cmd2_result 
  when: container_format == "tar"

- name: "extract tar"
# tar is faster than built in unarchive 
  local_action: shell tar -xf {{ cmd2_result.stdout }} -C {{ path_to_latest }}/archive/ --exclude=*.zip
#  local_action: unarchive src={{ cmd_result.stdout }} dest={{ path_to_latest }}/archive
  when: container_format == "tar"

- name: "Find the latest vmdk"
  local_action: shell ls -t {{ mn_vmdk | default(mn_vmdk_i) }}.gz | head -1
  ignore_errors: yes
  register: cmd2_result 

- name: "Find the latest vmdk, normalize the path"
  local_action: shell readlink -m {{ cmd2_result.stdout }}
  ignore_errors: yes
  register: cmd21_result
  when: cmd2_result.stdout != ""

- name: "gunzip MN vmdk: {{ cmd21_result.stdout }}"
  local_action: shell gzip -df {{ cmd21_result.stdout }}
  ignore_errors: yes
  when: cmd21_result.stdout is defined

- name: "Find the latest vmdk"
  local_action: shell ls -t {{ ts_vmdk | default(ts_vmdk_i) }}.gz | head -1
  ignore_errors: yes
  register: cmd3_result 

- name: "Find the latest vmdk, normalize the path"
  local_action: shell readlink -m {{ cmd3_result.stdout }}
  ignore_errors: yes
  register: cmd31_result
  when: cmd3_result.stdout != ""

- name: "gunzip DK vmdk: {{ cmd31_result.stdout }}"
  local_action: shell gzip -df {{ cmd31_result.stdout }}
  ignore_errors: yes
  when: cmd31_result.stdout is defined

- name: "Find the latest vmdk"
  local_action: shell ls -t {{ dk_vmdk | default(dk_vmdk_i) }}.gz | head -1
  ignore_errors: yes
  register: cmd3_result 

- name: "Find the latest vmdk, normalize the path"
  local_action: shell readlink -m {{ cmd3_result.stdout }}
  ignore_errors: yes
  register: cmd31_result
  when: cmd3_result.stdout != ""

- name: "gunzip DK vmdk: {{ cmd31_result.stdout }}"
  local_action: shell gzip -df {{ cmd31_result.stdout }}
  ignore_errors: yes
  when: cmd31_result.stdout is defined

- name: "Find the latest vmdk"
  local_action: shell ls -t {{ ddc_vmdk | default(ddc_vmdk_i) }}.gz | head -1
  ignore_errors: yes
  register: cmd4_result 

- name: "Find the latest vmdk, normalize the path"
  local_action: shell readlink -m {{ cmd4_result.stdout }}
  ignore_errors: yes
  register: cmd41_result
  when: cmd4_result.stdout != ""

- name: "gunzip DDC vmdk: {{ cmd41_result.stdout }}"
  local_action: shell gzip -df {{ cmd41_result.stdout }}
  ignore_errors: yes
  when: cmd41_result.stdout is defined

- name: "Find the latest vmdk"
  local_action: shell ls -t {{ mon_vmdk | default(mon_vmdk_i) }}.gz | head -1
  ignore_errors: yes
  register: cmd5_result 

- name: "Find the latest vmdk, normalize the path"
  local_action: shell readlink -m {{ cmd5_result.stdout }}
  ignore_errors: yes
  register: cmd51_result
  when: cmd5_result.stdout != ""

- name: "gunzip MON vmdk: {{ cmd51_result.stdout }}"
  local_action: shell gzip -df {{ cmd51_result.stdout }}
  ignore_errors: yes
  when: cmd51_result.stdout is defined

- name: "Find the latest vmdk"
  local_action: shell ls -t {{ vom_vmdk | default(vom_vmdk_i) }}.gz | head -1
  ignore_errors: yes
  register: cmd6_result 

- name: "Find the latest vmdk, normalize the path"
  local_action: shell readlink -m {{ cmd6_result.stdout }}
  ignore_errors: yes
  register: cmd61_result
  when: cmd6_result.stdout != ""

- name: "gunzip VOM vmdk: {{ cmd61_result.stdout }}"
  local_action: shell gzip -df {{ cmd61_result.stdout }}
  ignore_errors: yes
  when: cmd61_result.stdout is defined

- name: "Find the latest vmdk"
  local_action: shell ls -t {{ slb_vmdk | default(slb_vmdk_i) }}.gz | head -1
  ignore_errors: yes
  register: cmd7_result 

- name: "Find the latest vmdk, normalize the path"
  local_action: shell readlink -m {{ cmd7_result.stdout }}
  ignore_errors: yes
  register: cmd71_result
  when: cmd7_result.stdout != ""

- name: "gunzip SLB vmdk: {{ cmd71_result.stdout }}"
  local_action: shell gzip -df {{ cmd71_result.stdout }}
  ignore_errors: yes
  when: cmd71_result.stdout is defined

- name: "Find the latest vmdk"
  local_action: shell ls -t {{ da_vmdk | default(da_vmdk_i) }}.gz | head -1
  ignore_errors: yes
  register: cmd8_result 

- name: "Find the latest vmdk, normalize the path"
  local_action: shell readlink -m {{ cmd8_result.stdout }}
  ignore_errors: yes
  register: cmd81_result
  when: cmd8_result.stdout != ""

- name: "gunzip DA vmdk: {{ cmd81_result.stdout }}"
  local_action: shell gzip -df {{ cmd81_result.stdout }}
  ignore_errors: yes
  when: cmd81_result.stdout is defined

- name: "Find the latest vmdk"
  local_action: shell ls -t {{ cim_vmdk | default(cim_vmdk_i) }}.gz | head -1
  ignore_errors: yes
  register: cmd9_result 

- name: "Find the latest vmdk, normalize the path"
  local_action: shell readlink -m {{ cmd9_result.stdout }}
  ignore_errors: yes
  register: cmd91_result
  when: cmd9_result.stdout != ""

- name: "gunzip CIM vmdk: {{ cmd91_result.stdout }}"
  local_action: shell gzip -df {{ cmd91_result.stdout }}
  ignore_errors: yes
  when: cmd91_result.stdout is defined

- name: "Find the latest vmdk"
  local_action: shell ls -t {{ custom_vmdk | default(custom_vmdk_i) }}.gz | head -1
  ignore_errors: yes
  register: cmda_result 

- name: "Find the latest vmdk, normalize the path"
  local_action: shell readlink -m {{ cmda_result.stdout }}
  ignore_errors: yes
  register: cmda1_result
  when: cmda_result.stdout != ""

- name: "gunzip CUSTOM vmdk: {{ cmda1_result.stdout }}"
  local_action: shell gzip -df {{ cmda1_result.stdout }}
  ignore_errors: yes
  when: cmda1_result.stdout is defined

- name: "Find the latest vmdk"
  local_action: shell ls -t {{ tools_vmdk | default(tools_vmdk_i) }}.gz | head -1
  ignore_errors: yes
  register: cmdb_result 

- name: "Find the latest vmdk, normalize the path"
  local_action: shell readlink -m {{ cmdb_result.stdout }}
  ignore_errors: yes
  register: cmdb1_result
  when: cmdb_result.stdout != ""

- name: "gunzip TOOLS vmdk: {{ cmdb1_result.stdout }}"
  local_action: shell gzip -df {{ cmdb1_result.stdout }}
  ignore_errors: yes
  when: cmdb1_result.stdout is defined

