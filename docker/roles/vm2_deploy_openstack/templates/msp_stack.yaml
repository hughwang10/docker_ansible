 heat_template_version: 2013-05-23

 description: HOT template for deploying the MSP application

 resources:

################# Internal networks ####################

 #  oam_network:
 #    type: "network_pool.yaml"
 #    properties:
 #       net_name: {{ os_oam_name }}
 #       subnet_name: {{ os_oam_name }}
 #       net_cidr: {{ os_oam_network }}/{{ os_oam_cidr }}
 #       net_gateway: {{ os_oam_gateway }}
 #       net_pool_start: {{ oam_network_lowerip }}
 #       net_pool_end: {{ oam_network_upperip }}

   oam_network:
     type: OS::Neutron::Net
     properties:
         name: {{ os_oam_name }}

   oam_network_subnet:
     type: OS::Neutron::Subnet
     properties:
         name: {{ os_oam_name }}
         network_id: { get_resource: oam_network }
         cidr:  {{ os_oam_network }}/{{ os_oam_cidr }}
         #enable_dhcp: "false"
         gateway_ip: {{ os_oam_gateway }}
         allocation_pools:
           - start: {{ oam_network_lowerip }}
             end: {{ oam_network_upperip }}

{% if managed_ips | default(False) | bool == True %}
   internal_network:
     type: OS::Neutron::Net
     properties:
        name: {{ os_internal_name }}

   internal_network_subnet:
     type: OS::Neutron::Subnet
     properties:
        name: {{ os_internal_name }}
        network_id: { get_resource: internal_network }
        cidr: {{ os_internal_network }}/{{ os_internal_cidr }}
        gateway_ip: {{ os_internal_gateway }}
        allocation_pools:
           - start: {{ internal_network_lowerip }}
             end: {{ internal_network_upperip }}
{% else %}
   internal_network:
     type: "network_pool.yaml"
     properties:
        net_name: {{ os_internal_name }}
        subnet_name: {{ os_internal_name }}
        net_cidr: {{ os_internal_network }}/{{ os_internal_cidr }}
        net_gateway: {{ os_internal_gateway }}
        net_pool_start: {{ internal_network_lowerip }}
        net_pool_end: {{ internal_network_upperip }}
{% endif %}

#   access_network:
#     type: "network.yaml"
#     properties:
#        net_name: {{ os_access_name }}
#        subnet_name: {{ os_access_name }}
#        net_cidr: {{ os_access_network }}/{{ os_access_cidr }}
#        net_gateway: {{ os_access_gateway }}
#        #net_pool_start:
#        #net_pool_end:

   access_network:
     type: OS::Neutron::Net
     properties:
         name: {{ os_access_name }}

   access_network_subnet:
     type: OS::Neutron::Subnet
     properties:
         name: {{ os_access_name }}
         network_id: { get_resource: access_network }
         cidr:  {{ os_access_network }}/{{ os_access_cidr }}
         #enable_dhcp: "false"
         gateway_ip: {{ os_access_gateway }}
{% if managed_ips | default(False) | bool == True %}
         allocation_pools:
           - start: {{ access_network_lowerip }}
             end: {{ access_network_upperip }}
{% endif %}

#   internet_network:
#     type: "network.yaml"
#     properties:
#        net_name: {{ os_internet_name }}
#        subnet_name: {{ os_internet_name }}
#        net_cidr: {{ os_internet_network }}/{{ os_internet_cidr }}
#        net_gateway: {{ os_internet_gateway }}
#        #net_pool_start:
#        #net_pool_end:

   internet_network:
      type: OS::Neutron::Net
      properties:
         name: {{ os_internet_name }}

   internet_network_subnet:
     type: OS::Neutron::Subnet
     properties:
         name: {{ os_internet_name }}
         network_id: { get_resource: internet_network }
         cidr:  {{ os_internet_network }}/{{ os_internet_cidr }}
         #enable_dhcp: "false"
         gateway_ip: {{ os_internet_gateway }}
{% if managed_ips | default(False) | bool == True %}
         allocation_pools:
           - start: {{ internet_network_lowerip }}
             end: {{ internet_network_upperip }}
{% endif %}

#   access_ingress_network:
#     type: "network.yaml"
#     properties:
#        net_name: {{ os_accessingress_name }}
#        subnet_name: {{ os_accessingress_name }}
#        net_cidr: {{ os_accessingress_network }}/{{ os_accessingress_cidr }}
#        net_gateway: {{ os_accessingress_gateway }}
        #net_pool_start:
        #net_pool_end:

   access_ingress_network:
      type: OS::Neutron::Net
      properties:
         name: {{ os_accessingress_name }}

   access_ingress_network_subnet:
     type: OS::Neutron::Subnet
     properties:
         name: {{ os_accessingress_name }}
         network_id: { get_resource: access_ingress_network }
         cidr:  {{ os_accessingress_network }}/{{ os_accessingress_cidr }}
         #enable_dhcp: "false"
         gateway_ip: {{ os_accessingress_gateway }}
{% if managed_ips | default(False) | bool == True %}
         allocation_pools:
           - start: {{ accessingress_network_lowerip }}
             end: {{ accessingress_network_upperip }}
{% endif %}

#   internet_ingress_network:
#     type: "network.yaml"
#     properties:
#        net_name: {{ os_internetingress_name }}
#        subnet_name: {{ os_internetingress_name }}
#        net_cidr: {{ os_internetingress_network }}/{{ os_internetingress_cidr }}
#        net_gateway: {{ os_internetingress_gateway }}
        #net_pool_start:
        #net_pool_end:

   internet_ingress_network:
      type: OS::Neutron::Net
      properties:
         name: {{ os_internetingress_name }}

   internet_ingress_network_subnet:
     type: OS::Neutron::Subnet
     properties:
         name: {{ os_internetingress_name }}
         network_id: { get_resource: internet_ingress_network }
         cidr:  {{ os_internetingress_network }}/{{ os_internetingress_cidr }}
         #enable_dhcp: "false"
         gateway_ip: {{ os_internetingress_gateway }}
{% if managed_ips | default(False) | bool == True %}
         allocation_pools:
           - start: {{ internetingress_network_lowerip }}
             end: {{ internetingress_network_upperip }}
{% endif %}

{% if controlplanesig_network_prefix is defined %}
{% if managed_ips | default(False) | bool == True %}
   controlplan_sig_network:
     type: OS::Neutron::Net
     properties:
        name: {{ os_stackname }}-{{ controlplanesig_name }}

   controlplan_sig_network_subnet:
     type: OS::Neutron::Subnet
     properties:
        name: {{ os_stackname }}-{{ controlplanesig_name }}
        network_id: { get_resource: controlplan_sig_network }
        cidr: {{ controlplanesig_network }}/{{ controlplanesig_cidr }}
        gateway_ip: {{ controlplanesig_gateway }}
        allocation_pools:
          - start: {{ controlplanesig_network_lowerip }}
            end: {{ controlplanesig_network_upperip }}
{% else %}
   controlplan_sig_network:
     type: "network.yaml"
     properties:
        net_name: {{ os_stackname }}-{{ controlplanesig_name }}
        subnet_name: {{ os_stackname }}-{{ controlplanesig_name }}
        net_cidr: {{ controlplanesig_network }}/{{ controlplanesig_cidr }}
        net_gateway: {{ controlplanesig_gateway }}
        #net_pool_start:
        #net_pool_end:
{% endif %}
{% endif %}

########### External networks ########################

{% if os_oam_ext1_network is defined %}
   oam_external_net_1:
      type: OS::Neutron::Net
      properties:
         name: {{ os_oam_ext1_name }}
         value_specs:
               "router:external": true
               "provider:segmentation_id": {{ os_oam_ext1_vlan }}
               "provider:network_type": "vlan"
               "provider:physical_network": "default"

   oam_external_subnet_1:
     type: OS::Neutron::Subnet
     properties:
         name: {{ os_oam_ext1_name }}
         network_id: { get_resource: oam_external_net_1 }
         cidr:  {{ os_oam_ext1_network }}/{{ os_oam_ext1_cidr }}
         enable_dhcp: "false"
         gateway_ip: {{ os_oam_ext1_gateway }}
         allocation_pools:
           - start: {{ os_oam_ext1_start }}
             end: {{ os_oam_ext1_end }}
{% endif %}

{% if os_oam_ext2_network is defined %}
   oam_external_net_2:
      type: OS::Neutron::Net
      properties:
         name: {{ os_oam_ext2_name }}
         value_specs:
             "router:external": true
             "provider:segmentation_id": {{ os_oam_ext2_vlan }}
             "provider:network_type": "vlan"
             "provider:physical_network": "default"

   oam_external_subnet_2:
      type: OS::Neutron::Subnet
      properties:
         name: {{ os_oam_ext2_name }}
         network_id: { get_resource: oam_external_net_2 }
         cidr: {{ os_oam_ext2_network }}/{{ os_oam_ext2_cidr }}
         enable_dhcp: "false"
         gateway_ip: {{ os_oam_ext2_gateway }}
         allocation_pools:
           - start: {{ os_oam_ext2_start }}
             end: {{ os_oam_ext2_end }}
{% endif %}

   access_external_net_1:
      type: OS::Neutron::Net
      properties:
         name: {{ os_access_ext1_name }}
         value_specs:
              "router:external": true
              "provider:segmentation_id": {{ os_access_ext1_vlan }}
              "provider:network_type": "vlan"
              "provider:physical_network": "default"

   access_external_subnet_1:
      type: OS::Neutron::Subnet
      properties:
         name: {{ os_access_ext1_name }}
         network_id: { get_resource: access_external_net_1 }
         cidr:  {{ os_access_ext1_network }}/{{ os_access_ext1_cidr }}
         enable_dhcp: "false"
         gateway_ip: {{ os_access_ext1_gateway }}
         allocation_pools:
           - start: {{ os_access_ext1_start }}
             end: {{ os_access_ext1_end }}

   access_external_net_2:
      type: OS::Neutron::Net
      properties:
         name: {{ os_access_ext2_name }}
         value_specs:
              "router:external": true
              "provider:segmentation_id": {{ os_access_ext2_vlan }}
              "provider:network_type": "vlan"
              "provider:physical_network": "default"

   access_external_subnet_2:
      type: OS::Neutron::Subnet
      properties:
         name: {{ os_access_ext2_name }}
         network_id: { get_resource: access_external_net_2 }
         cidr:  {{ os_access_ext2_network }}/{{ os_access_ext2_cidr }}
         enable_dhcp: "false"
         gateway_ip: {{ os_access_ext2_gateway }}
         allocation_pools:
           - start: {{ os_access_ext2_start }}
             end: {{ os_access_ext2_end }}

   internet_external_net_1:
      type: OS::Neutron::Net
      properties:
         name: {{ os_internet_ext1_name }}
         value_specs:
              "router:external": true
              "provider:segmentation_id": {{ os_internet_ext1_vlan }}
              "provider:network_type": "vlan"
              "provider:physical_network": "default"

   internet_external_subnet_1:
      type: OS::Neutron::Subnet
      properties:
         name: {{ os_internet_ext1_name }}
         network_id: { get_resource: internet_external_net_1 }
         cidr: {{ os_internet_ext1_network }}/{{ os_internet_ext1_cidr }}
         enable_dhcp: "false"
         gateway_ip: {{ os_internet_ext1_gateway }}
         allocation_pools:
           - start: {{ os_internet_ext1_start }}
             end: {{ os_internet_ext1_end }}

   internet_external_net_2:
      type: OS::Neutron::Net
      properties:
         name: {{ os_internet_ext2_name }}
         value_specs:
              "router:external": true
              "provider:segmentation_id": {{ os_internet_ext2_vlan }}
              "provider:network_type": "vlan"
              "provider:physical_network": "default"

   internet_external_subnet_2:
      type: OS::Neutron::Subnet
      properties:
         name: {{ os_internet_ext2_name }}
         network_id: { get_resource: internet_external_net_2 }
         cidr: {{ os_internet_ext2_network }}/{{ os_internet_ext2_cidr }}
         enable_dhcp: "false"
         gateway_ip: {{ os_internet_ext2_gateway }}
         allocation_pools:
           - start: {{ os_internet_ext2_start }}
             end: {{ os_internet_ext2_end }}


############# Virtual Routers ##########################

   # Each router exists in both ToR switches
{% if os_oam_ext1_network is defined or os_oam_ext2_network is defined %}
   vr-oam:
      type: OS::Neutron::Router
      properties:
         name: {{ os_vr_oam }}
{% endif %}

   vr-access:
      type: OS::Neutron::Router
      properties:
         name: {{ os_vr_access }}

   vr-internet:
      type: OS::Neutron::Router
      properties:
         name: {{ os_vr_internet }}

########### Internal network ports ###################
#
#   oam_port:
#      type: {{ os_neutron_port_type }}
#      properties:
#         network_id: { get_attr: [oam_network, my_net_id] }

#   access_port:
#      type: {{ os_neutron_port_type }}
#      properties:
#         network_id: { get_attr: [access_network, my_net_id] }

#   access_ingress_port:
#      type: {{ os_neutron_port_type }}
#      properties:
#         network_id: { get_attr: [access_ingress_network, my_net_id] }

#   internet_port:
#      type: {{ os_neutron_port_type }}
#      properties:
#         network_id: { get_attr: [internet_network, my_net_id] }

#   internet_ingress_port:
#      type: {{ os_neutron_port_type }}
#      properties:
#         network_id: { get_attr: [internet_ingress_network, my_net_id] }

########### External network ports #####################


   # CREATE PORTS FOR EXTERNAL NETWORKS ON VRs
   # For oam_external two external ports required (active/active configuration = default)
   # For oam_external active/passive configuration, awaiting resolution of TR. A new  parameter will be created to facilitate this configuration.
{% if os_oam_ext1_network is defined %}
   oam_external_port_1:
      type: {{ os_neutron_port_type }}
      properties:
         network_id: { get_resource: oam_external_net_1 }
         device_owner: "baremetal:{{ os_border_gw1 }}"
         value_specs: {"binding:host_id": "{{ os_border_gw1 }}"}
{% endif %}

{% if os_oam_ext2_network is defined %}
   oam_external_port_2:
      type: {{ os_neutron_port_type }}
      properties:
         network_id: { get_resource: oam_external_net_2 }
         device_owner: "baremetal:{{ os_border_gw2 }}"
         value_specs: {"binding:host_id": "{{ os_border_gw2 }}"}
{% endif %}

   # For access_external two external ports required (active/active configuration = default)
   access_external_port_1:
      type: {{ os_neutron_port_type }}
      properties:
         network_id: { get_resource: access_external_net_1 }
         device_owner: "baremetal:{{ os_border_gw1 }}"
         value_specs: {"binding:host_id": "{{ os_border_gw1 }}"}

   access_external_port_2:
      type: {{ os_neutron_port_type }}
      properties:
         network_id: { get_resource: access_external_net_2 }
         device_owner: "baremetal:{{ os_border_gw2 }}"
         value_specs: {"binding:host_id": "{{ os_border_gw2 }}"}

   # For internet_external two external ports required (active/active configuration = default)
   internet_external_port_1:
      type: {{ os_neutron_port_type }}
      properties:
         network_id: { get_resource: internet_external_net_1 }
         device_owner: "baremetal:{{ os_border_gw1 }}"
         value_specs: {"binding:host_id": "{{ os_border_gw1 }}"}

   internet_external_port_2:
      type: {{ os_neutron_port_type }}
      properties:
         network_id: { get_resource: internet_external_net_2 }
         device_owner: "baremetal:{{ os_border_gw2 }}"
         value_specs: {"binding:host_id": "{{ os_border_gw2 }}"}

############ VR interfaces ################################
         # put active port in Extreme SWA
         #active_device_id: "{{ os_active_device_id }}"

{% if os_oam_ext1_network is defined %}
   vr-oam-interface-oam-external_1:
      type: OS::Neutron::RouterInterface
      properties:
         router_id: {get_resource: vr-oam }
         port_id: { get_resource: oam_external_port_1 }
{% endif %}

{% if os_oam_ext2_network is defined %}
   vr-oam-interface-oam-external_2:
      type: OS::Neutron::RouterInterface
      properties:
         router_id: {get_resource: vr-oam }
         port_id: { get_resource: oam_external_port_2 }
{% endif %}

{% if os_oam_ext1_network is defined or os_oam_ext2_network is defined %}
   vr-oam-interface-oam:
      type: {{ os_neutron_routerinterface_type }}
      properties:
         router_id: {get_resource: vr-oam }
         subnet_id: {get_resource: oam_network_subnet }
         #port_id: { get_resource: oam_port }
{% if os_active_device_name is defined  %}
         active_device_id: "{{ os_active_device_name }}"
{% else %}
         active_device_id: "{{ os_active_device_id }}"
{% endif %}
{% endif %}

   #vr-access
   vr-access-interface-access-external_1:
      type: OS::Neutron::RouterInterface
      properties:
         router_id: {get_resource: vr-access }
         port_id: { get_resource: access_external_port_1 }

   vr-access-interface-access-external_2:
      type: OS::Neutron::RouterInterface
      properties:
         router_id: {get_resource: vr-access }
         port_id: { get_resource: access_external_port_2 }

   vr-access-interface-access:
      type: OS::Neutron::RouterInterface
      properties:
         router_id: {get_resource: vr-access }
         #port_id: {get_resource: access_port }
         subnet_id: {get_resource: access_network_subnet  }

   vr-access-interface-access-ingress:
      type: OS::Neutron::RouterInterface
      properties:
         router_id: {get_resource: vr-access }
         #port_id: {get_resource: access_ingress_port }
         subnet_id: { get_resource: access_ingress_network_subnet }

   vr-internet-interface-internet-external_1:
      type: OS::Neutron::RouterInterface
      properties:
         router_id: {get_resource: vr-internet }
         port_id: { get_resource: internet_external_port_1 }

   vr-internet-interface-internet-external_2:
      type: OS::Neutron::RouterInterface
      properties:
         router_id: {get_resource: vr-internet }
         port_id: { get_resource: internet_external_port_2 }

   vr-internet-interface-internet:
      type: OS::Neutron::RouterInterface
      properties:
         router_id: {get_resource: vr-internet }
         #port_id: {get_resource: internet_port }
         subnet_id: { get_resource: internet_network_subnet }

   vr-internet-interface-internet-ingress:
      type: OS::Neutron::RouterInterface
      properties:
         router_id: {get_resource: vr-internet }
         #port_id: {get_resource: internet_ingress_port }
         subnet_id: { get_resource: internet_ingress_network_subnet }

############## Flavors ################################
   # VR Static Route Configuration
   # using OS::Neutron::ExtraRoute resource
#   vr-oam-static-route:
#      type:  OS::Neutron::ExtraRoute
#      properties:
#         router_id: { get_resource: vr-oam }
#         destination: {{ os_oam_network }}/{{ os_oam_cidr }}
#         nexthop: {{ os_oam_gateway }}


############## Flavors ################################
   #create msp flavors
   mn_flavor:
     type: "flavor.yaml"
     properties:
        flavor_name: MN
        ram_size: {{ os_mn_mem }}
        vcpus_number: {{ os_mn_cpu }}

   ts_flavor:
     type: "flavor.yaml"
     properties:
        flavor_name: TS
        ram_size: {{ os_ts_mem }}
        vcpus_number: {{ os_ts_cpu }}

   slb_flavor:
     type: "flavor.yaml"
     properties:
       flavor_name: SLB
       ram_size: {{ os_slb_mem }}
       vcpus_number: {{ os_slb_cpu }}

   ddc_flavor:
     type: "flavor.yaml"
     properties:
       flavor_name: DDC
       ram_size: {{ os_ddc_mem }}
       vcpus_number: {{ os_ddc_cpu }}

   mon_flavor:
     type: "flavor.yaml"
     properties:
       flavor_name: MON
       ram_size: {{ os_mon_mem }}
       vcpus_number: {{ os_mon_cpu }}

   vom_flavor:
     type: "flavor.yaml"
     properties:
       flavor_name: VOM
       ram_size: {{ os_vom_mem }}
       vcpus_number: {{ os_vom_cpu }}

   da_flavor:
     type: "flavor.yaml"
     properties:
       flavor_name: DA
       ram_size: {{ os_da_mem }}
       vcpus_number: {{ os_da_cpu }}

   cim_flavor:
     type: "flavor.yaml"
     properties:
       flavor_name: CIM
       ram_size: {{ os_cim_mem }}
       vcpus_number: {{ os_cim_cpu }}

   custom_flavor:
     type: "flavor.yaml"
     properties:
       flavor_name: CUSTOM
       ram_size: {{ os_custom_mem }}
       vcpus_number: {{ os_custom_cpu }}

   tools_flavor:
     type: "flavor.yaml"
     properties:
       flavor_name: TOOLS
       ram_size: {{ os_tools_mem }}
       vcpus_number: {{ os_tools_cpu }}

###################################################
