---
# Copyright (C) 2015 by
# Ericsson AB
# S-164 83 Stockholm
# Sweden
# Tel: +46 10 719 00 00
#
# The program may be used and/or copied only with the written permission
# from Ericsson AB, or in accordance with the terms and
# conditions stipulated in the agreement/contract under which the program
# has been supplied.
#
# All rights reserved.
# tasks file for roles/vm_upgrade_vsphere
- set_fact: execution_host="{{ vsphere_esxihostnames[ (execution_host_index | default('0')) | int ] }}"
  when: vsphere_esxihostnames is defined

- set_fact: execution_host="{{ vsphere_esxihostnames_advanced[ (execution_host_index | default('0')) | int ].esxi }}"
  when: vsphere_esxihostnames_advanced is defined

- set_fact: execution_host={{ vsphere_esxihostname }}
  when: vsphere_esxihostnames is not defined and vsphere_esxihostnames_advanced is not defined

- set_fact: deploy_datastore="{{ vsphere_esxihostnames_advanced[ (execution_host_index | default('0')) | int ].datastore | default(vsphere_datastore) }}"
  when: vsphere_esxihostnames_advanced is defined

- set_fact: deploy_datastore="{{ vsphere_datastore }}"
  when: vsphere_esxihostnames_advanced is not defined

- name: "make sure poweroff {{ item }}"
  action:
    module: vsphere
    host: "{{ vsphere_vcenter }}"
    login: "{{ vsphere_vcusername }}"
    password: "{{ vsphere_vcpassword }}"
    datacenter: "{{ vsphere_datacenter }}"
    timeout: 60
    guest:
      name: "{{ vm_name_deploy_old }}"
      state: shutdown
      force: True
  ignore_errors: yes
#  with_items: vm_names
  when: force_remove | default(False) != True and force_remove | default(False) != "True"

- name: Force poweroff  
  action:
    module: vsphere_poweroff_vm
    vcenter: "{{ vsphere_vcenter }}"
    vcusername: "{{ vsphere_vcusername }}"
    vcpassword: "{{ vsphere_vcpassword }}"
    vm_name: "{{ vm_name_deploy_old }}"
    datacenter: "{{ vsphere_datacenter }}"
    datastore: "{{ vsphere_datastore }}"
    esxihostname: "{{ vsphere_esxihostname }}"
    poweroff_mode: "hard"
  ignore_errors: yes
#  with_items: vm_names
  when: force_remove | default(False) == True or force_remove | default(False) == "True"

- name: Create Folder
  action:
    module: vsphere
    host: "{{ vsphere_vcenter }}"
    login: "{{ vsphere_vcusername }}"
    password: "{{ vsphere_vcpassword }}"
    datacenter: "{{ vsphere_datacenter }}"
    timeout: 60
    folder: 
      name: "{{ clusterid }}{{ system_versiontag }}"
      state: "present"

- name: Clone old vm
  action:
    module: vsphere
    host: "{{ vsphere_vcenter }}"
    login: "{{ vsphere_vcusername }}"
    password: "{{ vsphere_vcpassword }}"
    datacenter: "{{ vsphere_datacenter }}"
    timeout: 60
    guest:
      name: "{{ vm_name_deploy_old }}{{ system_versiontag }}_clone"
      state: present
      clone_from: "{{ vm_name_deploy_old }}"
      folder: "{{ clusterid }}{{ system_versiontag }}"
    spec:
      type: VirtualMachineCloneSpec
      value:
        config:
          VirtualMachineConfigSpec:
            name: "{{ vm_name_deploy_old }}{{ system_versiontag }}_clone"
            deviceChange: []
        location:
          VirtualMachineRelocateSpec:
            datastore:
              ManagedObjectReference:
                type: Datastore
                name: "{{ vsphere_datastore_misc }}"
            host:
              ManagedObjectReference:
                type: HostSystem
                name: "{{ vsphere_esxihostname }}"
        powerOn: False
        template: False 

- name: "Add the cloned MN to inventory"
  local_action: add_host name="{{ vm_name_deploy_old + system_versiontag + '_clone' }}" groups=templates templatename="{{ vm_name_deploy_old + system_versiontag + '_clone' }}" 

- name: Find the vmdk file names on clone
  action:
    module: vsphere_get_disks
    vcenter: "{{ vsphere_vcenter }}"
    vcusername: "{{ vsphere_vcusername }}"
    vcpassword: "{{ vsphere_vcpassword }}"
    vm_name: "{{ vm_name_deploy_old }}{{ system_versiontag }}_clone"
    datacenter: "{{ vsphere_datacenter }}"
    datastore: "{{ vsphere_datastore_misc }}"
    esxihostname: "{{ vsphere_esxihostname }}"
    folder_name: "{{ clusterid }}{{ system_versiontag }}"
    disk_ids: [ 1, 2, 3, 4 ]
  register: disk_files

- debug: msg="{{ disk_files.files }}"

- name: Mount vmdk disk from clone to the new template
  action:
    module: vsphere_attach_disks
    vcenter: "{{ vsphere_vcenter }}"
    vcusername: "{{ vsphere_vcusername }}"
    vcpassword: "{{ vsphere_vcpassword }}"
    vm_name: "{{ template_name }}"
    datacenter: "{{ vsphere_datacenter }}"
    datastore: "{{ vsphere_datastore_misc }}"
    esxihostname: "{{ vsphere_esxihostname }}"
    disk_file_paths: "{{ disk_files.files }}"
    disk_ids: [ 1, 2, 3, 4 ]

# power on after cloning
- name: msg="Power on old MN after cloning"
  vsphere_guest:
    vcenter_hostname: "{{ vsphere_vcenter }}"
    username: "{{ vsphere_vcusername }}"
    password: "{{ vsphere_vcpassword }}"
    guest: "{{ vm_name_deploy_old }}"
    state: powered_on


